function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from "react";

var _ref2 =
/*#__PURE__*/
React.createElement("path", {
  fill: "currentColor",
  fillRule: "evenodd",
  d: "     M22,3c0,-1.6 -1.3,-3 -3,-3l-16,0c-1.6,0 -3,1.3 -3,3l0,18c0,1.6 1.3,3 3,3l16,0c1.6,0 3,-1.3 3,-3l0,-18Z     M3 18.5L8 14l6 4.5 5-4.5v7H3zM18 7a3 3 0 1 1-5.999 0A3 3 0 0 1 18 7"
});

var SvgImageIcon = function SvgImageIcon(_ref) {
  var svgRef = _ref.svgRef,
      title = _ref.title,
      props = _objectWithoutProperties(_ref, ["svgRef", "title"]);

  return React.createElement("svg", _extends({
    viewBox: "0 0 22 24",
    ref: svgRef
  }, props), title ? React.createElement("title", null, title) : null, _ref2);
};

var ForwardRef = React.forwardRef(function (props, ref) {
  return React.createElement(SvgImageIcon, _extends({
    svgRef: ref
  }, props));
});
export default __webpack_public_path__ + "static/media/ImageIcon.a0ab8d3f.svg";
export { ForwardRef as ReactComponent };